// generated from rosidl_adapter/resource/srv.idl.em
// with input from rtabmap_msgs/srv/CleanupLocalGrids.srv
// generated code does not contain a copyright notice


module rtabmap_msgs {
  module srv {
    @verbatim (language="comment", text=
      "Cleanup local grids service" "\n"
      "" "\n"
      "   Clear empty space from local occupancy grids " "\n"
      "   (and laser scans) based on the current optimized global 2d grid map." "\n"
      "   If the map needs to be regenerated in the future (e.g., when" "\n"
      "   we re-use the map in SLAM mode), removed obstacles won't reappear." "\n"
      "   Use this with care and only when you know that the map doesn't have errors, " "\n"
      "   otherwise some real obstacles/walls may be cleared if there is too much " "\n"
      "   drift in the map.")
    struct CleanupLocalGrids_Request {
      @verbatim (language="comment", text=
        "Radius in cells around empty cell without obstacles to clear underlying obstacles, default 1 cell if not set.")
      int32 radius;

      @verbatim (language="comment", text=
        "Filter also the scans, default false if not set." "\n"
        "The filtered laser scans will be used for localization," "\n"
        "so if dynamic obstacles have been removed, localization won't try to" "\n"
        "match them anymore. Filtering the laser scans cannot be reverted," "\n"
        "but grids can (see DatabaseViewer->Edit menu).")
      boolean filter_scans;
    };
    @verbatim (language="comment", text=
      "return the number of grids or scans modified, -1 if there is an error")
    struct CleanupLocalGrids_Response {
      int32 modified;
    };
  };
};
